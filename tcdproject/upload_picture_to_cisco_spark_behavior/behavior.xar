<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="upload_to_spark" id="1" localization="8" tooltip="" x="210" y="331">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        from requests_toolbelt import MultipartEncoder
        import requests

        import json

        uri = 'https://ciscospark.live/authenticate'
        authData = {
          'user': 'adammendoza@hotmail.com',
          'pass': '@pwpwwpw',
          'id': 'Ca7669ab37fd2b51260ba9720b9e329af52d9ffa352eefee95af3ec7427e29fc2',
          'secret': '413140a29481bce4b01343aadd02ac5b43b2c2baf7a849e0e062af4bfd1abe7c',
          'redirectUri': 'http://pepper-travel.mybluemix.net'
        }

        headers = { 'Content-Type' : 'application/json' }
        req = requests.post(
          url=uri,
          headers=headers,
          data=json.dumps(authData),
          verify=False
        )
        # access_token/refresh_token
        print req.text

        filepath    = 'pictureOnPepper'
        filetype    = 'image/jpg'
        roomId      = 'General'
        token       = 'Ca7669ab37fd2b51260ba9720b9e329af52d9ffa352eefee95af3ec7427e29fc2'
        url         = "https://api.ciscospark.com/v1/messages"

        my_fields={'roomId': roomId,
                   'text': 'Hello World',
                   'files': ('screenshot', open(filepath, 'rb'), filetype)
                   }

        m = MultipartEncoder(fields=my_fields)

        r = requests.post(url, data=m,
                          headers={'Content-Type': m.content_type,
                                   'Authorization': 'Bearer ' + token})
        #print r.json()
        print r


        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
